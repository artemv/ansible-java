    - name: get download links
      get_url:
        url: "{{ORACLE_URL}}"
        dest: '/tmp/links'
        validate_certs: "{{validate_certs}}"
      changed_when: false

    - name: get latest url
      shell: cat /tmp/links | grep -ioE 'http://download.oracle.com/otn-pub/java/jdk/.*?/jdk-8u.*?-linux-x64.tar.gz' | tail -1
      register: JVM_URL
      changed_when: false

    - when: JVM_URL.rc != 0 or JVM_URL.stderr != ""
      block:
      - debug: msg="Getting JVM url failed {{JVM_URL.stdout}} -> {{JVM_URL.stderr}}"
      - meta: end_play

    - set_fact: JVM_ZIP="/tmp/{{JVM_URL.stdout | basename}}"
    - set_fact: jvm_ver="{{installed_jvm_version.stdout | regex_replace('_', 'u') | regex_replace('1.8.0', '8') }}"
    - set_fact: upgrade_needed="{{jvm_ver == '' or not jvm_ver in JVM_ZIP }}"

    - when: upgrade_needed
      block:

      - stat: path="{{JVM_ZIP}}"
        register: jvm_zip_file

      - name: "downloading {{JVM_URL.stdout}}"
        when: not jvm_zip_file.stat.exists
        get_url:
          url:     "{{ JVM_URL.stdout }}"
          headers: 'Cookie:oraclelicense=accept-securebackup-cookie'
          dest:    "{{JVM_ZIP}}"
          validate_certs: "{{validate_certs}}"


      - name: unzip JVM
        shell: rm -rf /tmp/jvm; mkdir /tmp/jvm; tar -zxvf {{JVM_ZIP}} -C /tmp/jvm

      - file: path="{{JVM_PATH}}" state=directory

      - name: install JVM
        shell: rm -rf {{JVM_PATH}}/; mv /tmp/jvm/`ls /tmp/jvm`/ {{JVM_PATH}}/

      - name: link commands
        file:
          src:  "{{item}}"
          force: yes
          dest: "{{INSTALL_PATH}}/bin/{{item | basename}}"
          state: link
        with_fileglob: "{{JVM_PATH}}/bin/*"

    - name: remove installation file
      when: REMOVE_INSTALL_FILES
      file:
          path: "{{JVM_ZIP}}"
          state: absent

    - name: remove installation file
      when: REMOVE_INSTALL_FILES
      file:
          path: "/tmp/jvm"
          state: absent
